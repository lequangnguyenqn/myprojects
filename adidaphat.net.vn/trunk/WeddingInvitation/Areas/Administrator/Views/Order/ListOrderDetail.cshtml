@model WeddingInvitation.Areas.Administrator.Models.OrderModel
@{
    Layout = null;
}

<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Areas/Administrator/Content/Images/ico-catalog.png")" alt="" />
        Danh sách sản phẩm
    </div>
</div>

@Html.Osd().HiddenPopupWindow("Cảnh Báo", Helpers.DeleteConfirmMessageBox("Bạn có thực sự muốn xóa không", @Url.Action("DeleteOrderDetail", "Order", new { area = "administrator" })).ToHtmlString())
@(Html.Telerik().Grid<WeddingInvitation.Areas.Administrator.Models.OrderDetailModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            columns.Bound(x => x.ProductName).Title("Sản Phẩm")
                .Width(150)
                .Filterable(false);
            columns.Bound(p => p.PrintWithoutImageDisplay)
                            .ClientTemplate("<img src=\"" + Url.Action("Index", "Home", new { area = "" }) + "<#= PrintWithoutImageDisplay #>" + "\" />")
                            .HtmlAttributes(new { style = "text-align:center" })
                            .Title("In không hình")
                            .Width(50)
                            .Filterable(false);
            columns.Bound(p => p.PrintIncludeImageDisplay)
                            .ClientTemplate("<img src=\"" + Url.Action("Index", "Home", new { area = "" }) + "<#= PrintIncludeImageDisplay #>" + "\" />")
                            .HtmlAttributes(new { style = "text-align:center" })
                            .Title("In có hình")
                            .Width(50)
                            .Filterable(false);
            columns.Bound(x => x.AmountDisplay).Title("Số Lượng")
                .Width(100)
                .Filterable(false);
            columns.Bound(x => x.Note).Title("Ghi Chú")
                .Sortable(false)
                .Filterable(false);
        }).DataBinding(dataBinding => dataBinding.Ajax().Select("GridModelOrderDetail", "Order", new { orderId = Model.OrderId }))
)
