@model WeddingInvitation.Areas.Administrator.Models.OrderDetailModel
@{
    var photoNotExistFileName = string.IsNullOrEmpty(Model.FilePath) ? Url.Content("~/Content/images/document.png") : Url.Content("~/Content/images/unavailable.png");
    var photoExistedFileName = Url.Content("~/Content/images/unavailable.png");
}
@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Areas/Administrator/Views/Shared/_LayoutTwoColumns.cshtml";
}
@using (Html.BeginForm("SaveOrderDetail", "Order", FormMethod.Post))
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Areas/Administrator/Content/images/ico-catalog.png")" alt="" />
            @(Model.OrderDetailId > 0 ? "Sửa sản phẩm" : "Thêm sản phẩm")
        </div>
        <div class="options">
            <button type="submit" name="save" value="Save" tabindex="6" class="t-button">Lưu</button>
            @if(Model.OrderId <= 0)
            {
                <a href="@Url.Action("Create", "Order", new { blank = false})" tabindex="8" class="t-button">Quay về</a>
            }
            else
            {
                <a href="@Url.Action("Edit", "Order", new { id = Model.OrderId})" tabindex="8" class="t-button">Quay về</a>
            }
        </div>
    </div>
    @Html.HiddenFor(model => model.FilePath, new { id = "hfMainPromoImagePath" })
    @Html.HiddenFor(model => model.OrderId)
    <table width="99%">
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Bán từ kho")
                <span class="field_required">*</span>
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.StorageId, new SelectList(Model.Storages, "StorageId", "StorageName"), "-Chọn-")
                @Html.ValidationMessageFor(model => model.StorageId, "Kho là bắt buộc.")
            </td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Sản phẩm")
                <span class="field_required">*</span>
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.Categories, "CategoryId", "CategoryName"), "-Chọn-")
                @Html.ValidationMessageFor(model => model.CategoryId, "Sản phẩm là bắt buộc.")
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
            </td>
            <td align="left" id="listProduct">
            </td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Số lượng")
            </td>
            <td style="padding-bottom:10px">
                @(Html.Telerik().IntegerTextBoxFor(model => model.Amount).MinValue(0).MaxValue(int.MaxValue).NumberGroupSeparator("."))
                @Html.ValidationMessageFor(model => model.Amount)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.Label("In không hình")
            </td>
            <td align="left">
                @Html.CheckBoxFor(model => model.PrintWithoutImage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.Label("In có hình cô dâu, chú rể")
            </td>
            <td align="left">
                @Html.CheckBoxFor(model => model.PrintIncludeImage)
            </td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("File")
            </td>
            <td class="adminData">
                <img src="@photoNotExistFileName" width="128" height="128" id="imgUserImagePath"/>
            </td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
            </td>
            <td class="adminData">
                <div class="uploadbtn align-left">
                    <input id="fileuploaderUserImage" type="file"/>
                </div>
                @*<div style="float: left; font-size: 12px; padding-left: 20px;padding-top:10px;">
                    100 x 100px<br>
                    Maximum size of 1MB. JPG, GIF, PNG.</div>*@
            </td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Ghi chú")
            </td>
            <td class="adminData">
                @Html.TextAreaFor(model => model.Note, new { @rows = "5" })
                @Html.ValidationMessageFor(model => model.Note)
            </td>
        </tr>
    </table>
}
<script src="@Url.Content("~/Scripts/swfobject.js")" type="text/javascript" ></script>
<script src="@Url.Content("~/Scripts/jquery.uploadify.v2.1.4.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(window).load(
    function () {
        $("#fileuploaderUserImage").uploadify({
            'sizeLimit': 10240000,
            'uploader': '@Url.Content("~/Scripts/uploadify.swf")',
            'cancelImg': '@Url.Content("~/Content/images/cancel.png")',
            'buttonImg': '@Url.Content("~/Content/images/update_btn.png")',
            'buttonText': 'Upload A File',
            'height': '30',
            'width': '92',
            'script': '@Url.Action("OrderDetailFile", "Upload", new { area = "administrator" })',
            'folder': '@Url.Content("~/Uploads")',
            'fileDesc': 'Chọn Files',
            'multi': false,
            'auto': true,
            'onComplete': CompleteUpload,
            'onError': onErrorUpload
        });
        $("#fileuploaderQueue").hide();
        $("#PrintWithoutImage").click(function () {
            var isChecked = $('#PrintWithoutImage').is(':checked');
            if (isChecked == true) {
                $("#PrintIncludeImage").prop("checked", false);
            }
        });
        $("#PrintIncludeImage").click(function () {
            var isChecked = $('#PrintIncludeImage').is(':checked');
            if (isChecked == true) {
                $("#PrintWithoutImage").prop("checked", false);
            }
        });
        GetProducts();
        $("#CategoryId").change(function () {
            GetProducts();
        });
        function GetProducts() {
            var categoryId = $('#CategoryId').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetProducts", "Order")" + "?categoryId=" + categoryId,
                success: function (data) {
                    var html = "";
                    $.each(data, function (idx, obj) {
                        html += "<div class=\"checkboxlist\"><input type=\"checkbox\" name=\"ProductIds\" value=" + obj.Id + " checked=checked><span>" + obj.Name + "</span></div>"
                    });
                    //$('#listProduct').hide();
                    $('#listProduct').html(html);
                    $('#listProduct').show(400);
                },
                error: function () {
                    console.log('An error occurred');
                }
            });
        };
    });
    function CompleteUpload(event, queueID, fileObj, response, data) {
        document.getElementById("imgUserImagePath").src = "@photoExistedFileName";
        document.getElementById("hfMainPromoImagePath").value = response;
        return;
        //alert(fileObj.filePath + ' files uploaded successfully!');
    };

    function onErrorUpload(a, b, c, d) {
        if (d.status == 404)
            alert("Could not find upload script. Use a path relative to: " + "<?= getcwd() ?>");
        else if (d.type === "HTTP") {
            alert("error " + d.type + ": " + d.info);
        }
        else if (d.type === "File Size") {
            alert(d.type + " Limit: " + d.info / (10240000) + "MB");
        } else
            alert("error " + d.type + ": " + d.text);
    };
</script>