@model WeddingInvitation.Areas.Administrator.Models.OrderModel
@using WeddingInvitation.Data
@using WeddingInvitation.Infrastructure.Security;
@using WeddingInvitation.Infrastructure;
@{
    ViewBag.Title = "Danh sách đơn hàng";
}
<script type="text/javascript">
    $(document).ready(function () {
        new SearchHelper($("#txtSearch"), $("#btnSearch"), $("#Order"));
    });
</script>
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Areas/Administrator/Content/Images/ico-catalog.png")" alt="" />
        Danh sách đơn hàng
    </div>
    <div class="options">
        <a onclick="Preview();" class="t-button">Xem</a>
    </div>
</div>
<table width="90%">
    <tr>
        <td>
            @Html.Label("Từ ngày")
        </td>
        <td>
            @Html.Label("Đến ngày")
        </td>
        <td>
            @Html.Label("Chi nhánh")
        </td>
    </tr>
    <tr>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("FromDate")
                    .HtmlAttributes(new { id = "FromDate_wrapper" })
                    .ShowButton(true)
                    .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1))
            )
        </td>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("ToDate")
                    .HtmlAttributes(new { id = "ToDate_wrapper" })
                    .ShowButton(true)
                    .Value(DateTime.Now)
            )
        </td>
        <td>
            @Html.DropDownList("MyOffice", new SelectList(Model.MyOffices, "MyOfficeId", "OfficeName"))
        </td>
    </tr>
</table>
<br />
@Helpers.SearchPanel(text: "Nhập vào từ khóa tìm kiếm...", btnSearch: "btnSearch", txtSearch: "txtSearch", showFromSearch:false)
@Html.Osd().HiddenPopupWindow("Cảnh Báo", Helpers.DeleteConfirmMessageBox("Bạn có muốn đề xuất hủy đơn hàng này không?", @Url.Action("CanelOrderDone", "Order", new { area = "administrator" })).ToHtmlString())
@(Html.Osd().Grid(new List<WeddingInvitation.Areas.Administrator.Models.OrderModel>(), name: "Order", controllerName: "Order")
    .Columns(columns =>
    {
        //columns.Bound(x => x.OrderId).Title("ID").ClientTemplate("<a href=\"Order/Edit/<#= OrderId #>\"><#= 10000 + OrderId #></a>")
        //    .Width(100)
        //    .Visible(WorkContext.Roles.Contains(RoleType.Administrator) || WorkContext.Roles.Contains(RoleType.KeToan) || WorkContext.Roles.Contains(RoleType.QuanLyChung))
        //    .Filterable(false);
        columns.Bound(x => x.OrderId).Title("ID").ClientTemplate("<label><#= 10000 + OrderId #></label>")
            .Width(70)
            .Filterable(false);
        columns.Bound(x => x.CustomerName).Title("Khách Hàng")
            .Filterable(false);
        columns.Bound(x => x.MyOfficeIName).Title("Chi Nhánh")
        .Width(150)
        .Filterable(false);
        columns.Bound(x => x.CreateDate).Title("Ngày Tạo").Format("{0:dd/MM/yyyy HH:mm}")
            .Width(100)
            .Filterable(false);
        columns.Bound(p => p.OrderId)
                            .ClientTemplate("<a onclick='onMessageBoxDownloadFile(<#= OrderId #>)'>Chi tiết</a>")
                            .HtmlAttributes(new { style = "text-align:center" })
                            .Title("")
                            .Width(70).Sortable(false)
                            .Filterable(false);
        columns.Bound(x => x.StatusDisplay).Title("Trạng Thái")
            .Width(100)
            .Filterable(false);
        columns.Bound(x => x.PrintUserName).Title("Nhân Viên In")
            .Width(150)
            .Filterable(false);
        columns.Bound(x => x.DeliveredUserName).Title("Nhân Viên Giao")
            .Width(150)
            .Filterable(false);
        columns.Bound(x => x.TotalCostDisplay).Title("Tổng Tiền")
            .Width(100)
            .Filterable(false);
        columns.Bound(x => x.StatusStoppingDisplay).Title("Tạm ngưng")
            .Width(150)
            .Filterable(false)
            .Visible(false);
        //columns.Bound(p => p.OrderId)
        //                    .ClientTemplate("<a onclick='onMessageBoxOrderStopping(<#= OrderId #>)'>" + "<img src=\"" + Url.Action("Index", "Home", new { area = "" }) + "<#= StatusStoppingDisplay #>" + "\" />" + "</a>")
        //                    .HtmlAttributes(new { style = "text-align:center" })
        //                    .Title("<b>Tạm ngưng</b>")
        //                    .Width(80)
        //                    .Filterable(false).Sortable(false);
        columns.Bound(p => p.OrderId)
            .ClientTemplate("<a onclick='onMessageBoxActionDelete(<#= OrderId #>)'><img src=\" ../Content/Images/delete_16_16.png\" /></a>")
            .HtmlAttributes(new { style = "text-align:center" })
            .Title("<b>Hủy</b>")
            .Width(50)
            .Filterable(false).Sortable(false);
    }).Sortable(p => p.SortMode(GridSortMode.MultipleColumn).OrderBy(o =>
                        {
                            o.Add(t => t.OrderId);
                        }))
                        .ClientEvents(events => events.OnDataBinding("onDataBinding"))
                    .EnableCustomBinding(true))
@{Html.Telerik().Window()
        .Name("MessageBoxOrderStopping")
        .Title("Cảnh báo")
        .Draggable(true)
        .Modal(true)
        .Visible(false)
        .Width(250)
        .Height(100)
        .Effects(fx => fx
                    .Zoom()
                    .Opacity()
                    .OpenDuration(300)
                    .CloseDuration(300)
        )
        .Content(@<text>
    <script type="text/javascript">
        function onMessageBoxOrderStoppingClose() {
            $('#MessageBoxOrderStopping').data('tWindow').center().close();
        }

        function onMessageBoxOrderStopping(id) {
            $("#orderId").val(id);
            $('#MessageBoxOrderStopping').data('tWindow').center().open();
        }
    </script>
    <form action="@Url.Action("OrderStopping", "Order")" method="post">
        <input type="hidden" id="orderId" name="id" />
        <div style="text-align:center"><p>Bạn có muốn thực hiện thao tác này?</p></div>
        <table>
            <tr>
                <td>
                    <div class="form-actions" style="margin-left:55px">
                        <input type="submit" style="height:25px;width:50px" class="t-button t-state-default" value="Yes" />
                    </div>
                </td>
                <td>
                    <div class="form-actions" style="margin-left:0px">
                        <input type="button" style="height:25px;width:50px" onclick="onMessageBoxOrderStoppingClose();"
                               class="t-button t-state-default" value="No" />
                    </div>
                </td>
            </tr>
        </table>
    </form>
</text>)
        .Render();}
<script type="text/javascript">
    $(document).ready(function () {
        $("#MyOffice").multiselect({
            header: true,
            selectedText: '#/# đã chọn',
            noneSelectedText: '- Chọn -',
            selectedList: 0,
            checkAllText: 'Chọn hết',
            uncheckAllText: 'Bỏ chọn'
        });
        $("#MyOffice").multiselect("uncheckAll");
        jQuery.validator.methods["date"] = function (value, element) { return true; };
    });
    function Preview() {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var offices = $("#MyOffice").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        jQuery.ajaxSettings.traditional = true;
        $("#Order").data('tGrid')
                         .rebind({
                             FromDate: fromDate,
                             ToDate: toDate,
                             ListOffices: offices,
                         });

    }
    function onDataBinding(e) {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var offices = $("#MyOffice").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        var searchModel = {
            FromDate: fromDate,
            ToDate: toDate,
            ListOffices: offices,
        };
        e.data = searchModel;
    }
</script>
@{ Html.Telerik().Window()
        .Name("OrderDetails")
        .Title("Sản phẩm")
        .Draggable(true)
        .Visible(false)
        .Modal(true)
        .Width(870)
        .Height(260)
        .Render();
}
<script type="text/javascript">
    function onMessageBoxDownloadFile(id) {
        var window = $("#OrderDetails").data("tWindow");
        window.ajaxRequest($.validator.format("{0}/{1}?mode=1", "@Url.Action("ListOrderDetailPrint", "Order")", id || ""));
        window.center().open();
    }
</script>