@model WeddingInvitation.Areas.Administrator.Models.ImportTrackModel
@{
    Layout = "~/Areas/Administrator/Views/Shared/_LayoutTwoColumns.cshtml";
    ViewBag.Title = "Báo cáo nhập kho";
}
<script type="text/javascript">
    $(document).ready(function () {
        new SearchHelper($("#txtSearch"), $("#btnSearch"), $("#ImportTrack"));
    });
</script>
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Areas/Administrator/Content/Images/ico-catalog.png")" alt="" />
        Báo cáo nhập kho
    </div>
    <div class="options">
        <a onclick="Preview();" class="t-button">Xem</a>
    </div>
</div>
<table width="90%">
    <tr>
        <td>
            @Html.Label("Từ ngày")
        </td>
        <td>
            @Html.Label("Đến ngày")
        </td>
        <td>
            @Html.Label("Kho nhận")
        </td>
    </tr>
    <tr>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("FromDate")
                    .HtmlAttributes(new { id = "FromDate_wrapper" })
                    .ShowButton(true)
                    .Value(DateTime.Now)
            )
        </td>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("ToDate")
                    .HtmlAttributes(new { id = "ToDate_wrapper" })
                    .ShowButton(true)
                    .Value(DateTime.Now)
            )
        </td>
        <td>
            @Html.DropDownList("ToListStorages", new SelectList(Model.Storages, "StorageId", "StorageName"))
        </td>
    </tr>
</table>
<br />
@Helpers.SearchPanel(text: "Nhập vào từ khóa tìm kiếm...", btnSearch: "btnSearch", txtSearch: "txtSearch", showFromSearch: false)
@Html.Osd().HiddenPopupWindow("Cảnh Báo", Helpers.DeleteConfirmMessageBox("Bạn có thực sự muốn xóa không", @Url.Action("delete", "ImportTrack", new { area = "administrator"})).ToHtmlString())
@(Html.Osd().Grid(new List<WeddingInvitation.Areas.Administrator.Models.ImportTrackModel>(), name: "ImportTrack", controllerName: "ImportTrack")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.ImportTrackId).Title("ID").ClientTemplate("<label><#= 10000 + ImportTrackId #></label>")
                            .Width(100)
                            .Filterable(false);
                        columns.Bound(x => x.CreateDate).Title("Ngày Nhập").Format("{0:dd/MM/yyyy}")
                            .Width(100)
                            .Filterable(false);
                        columns.Bound(x => x.ImportUserName).Title("Nhân Viên Nhập")
                            .Filterable(false);
                        columns.Bound(p => p.ImportTrackId)
                            .ClientTemplate("<a onclick='onMessageBoxDetail(<#= ImportTrackId #>)'>Chi tiết</a>")
                            .HtmlAttributes(new { style = "text-align:center" })
                            .Title("")
                            .Width(70).Sortable(false)
                            .Filterable(false);
                        columns.Bound(x => x.ApproveFromManagerName).Title("Xác nhận quản lý chung")
                            .Width(250)
                            .Filterable(false);
                        columns.Bound(x => x.ApproveFromStorageStaffName).Title("Xác nhận quản lý kho")
                            .Width(250)
                            .Filterable(false);
                        //columns.Bound(p => p.ImportTrackId)
                        //    .ClientTemplate("<a onclick='onMessageBoxActionDelete(<#= ImportTrackId #>, <#= StorageId #>)'><img src=\" ../Content/Images/delete_16_16.png\" /></a>")
                        //    .HtmlAttributes(new { style = "text-align:center" })
                        //    .Title(string.Empty)
                        //    .Width(100).Sortable(false)
                        //    .Filterable(false);
                    })
                    .ClientEvents(events => events.OnDataBinding("onDataBinding"))
                    .EnableCustomBinding(true)
                    .Sortable(p => p.OrderBy(o =>
                        {
                            o.Add(t => t.ImportTrackId).Descending();
                        })))
@{ Html.Telerik().Window()
        .Name("ImportDetails")
        .Title("Chi tiết nhập kho")
        .Draggable(true)
        .Visible(false)
        .Modal(true)
        .Width(870)
        .Height(260)
        .Render();
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#ToListStorages").multiselect({
            header: true,
            selectedText: '#/# đã chọn',
            noneSelectedText: '- Chọn -',
            selectedList: 0,
            checkAllText: 'Chọn hết',
            uncheckAllText: 'Bỏ chọn'
        });
        $("#ToListStorages").multiselect("uncheckAll");
        jQuery.validator.methods["date"] = function (value, element) { return true; };
    });
    function onMessageBoxDetail(id) {
        var window = $("#ImportDetails").data("tWindow");
        window.ajaxRequest($.validator.format("{0}/{1}", "@Url.Action("ListImportDetail", "ImportTrack")", id || ""));
        window.center().open();
    }
    function Preview() {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var toListStorages = $("#ToListStorages").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        jQuery.ajaxSettings.traditional = true;
        $("#ImportTrack").data('tGrid')
                         .rebind({
                             FromDate: fromDate,
                             ToDate: toDate,
                             ToListStorages: toListStorages
                         });

    }
    function onDataBinding(e) {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var toListStorages = $("#ToListStorages").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        var searchModel = {
            FromDate: fromDate,
            ToDate: toDate,
            ToListStorages: toListStorages
        };
        e.data = searchModel;
    }
</script>