@model WeddingInvitation.Areas.Administrator.Models.OrderModel
@{
    ViewBag.Title = "Báo cáo công nợ đã thu tiền mặt của khách";
}
<script type="text/javascript">
    $(document).ready(function () {
        new SearchHelper($("#txtSearch"), $("#btnSearch"), $("#ImportTrack"));
    });
</script>
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Areas/Administrator/Content/Images/ico-catalog.png")" alt="" />
        Báo cáo công nợ đã thu tiền mặt của khách
    </div>
    <div class="options">
        <a onclick="Preview();" class="t-button">Xem</a>
    </div>
</div>
<table width="100%">
    <tr>
        <td>
            @Html.Label("Từ ngày")
        </td>
        <td>
            @Html.Label("Đến ngày")
        </td>
        <td>
            @Html.Label("Chi nhánh")
        </td>
        <td>
            @Html.Label("Khách hàng")
        </td>
        <td>
            @Html.CheckBox("Tranfer")
            <b>@Html.Label("Chuyển khoản")</b>
        </td>
        <td>
            @Html.CheckBox("InShippingPlace")
            <b>@Html.Label("Thu hộ")</b>
        </td>
    </tr>
    <tr>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("FromDate")
                    .HtmlAttributes(new { id = "FromDate_wrapper" })
                    .ShowButton(true)
                    .Value(DateTime.Now)
            )
        </td>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("ToDate")
                    .HtmlAttributes(new { id = "ToDate_wrapper" })
                    .ShowButton(true)
                    .Value(DateTime.Now)
            )
        </td>
        <td>
            @Html.DropDownList("ListOffices", new SelectList(Model.MyOffices, "MyOfficeId", "OfficeName"))
        </td>
        <td>
            @Html.DropDownList("ListCustomers", new SelectList(Model.Customers, "CustomerId", "CustomerName"))
        </td>
        <td>
        </td>
        <td>
        </td>
    </tr>
</table>
<br />
@Helpers.SearchPanel(text: "Nhập vào từ khóa tìm kiếm...", btnSearch: "btnSearch", txtSearch: "txtSearch", showFromSearch: false)
@Html.Osd().HiddenPopupWindow("Cảnh Báo", Helpers.DeleteConfirmMessageBox("Bạn có thực sự muốn xóa không", @Url.Action("delete", "ImportTrack", new { area = "administrator"})).ToHtmlString())
@(Html.Osd().Grid(new List<WeddingInvitation.Areas.Administrator.Models.PaymentPeriodModel>(), name: "PaymentPeriod", controllerName: "PaymentPeriod", action:"CustomerPaidGridModel", routeValues:null)
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.PaymentPeriodId).Title("ID").ClientTemplate("<label><#= 10000 + PaymentPeriodId #></label>")
                           .Width(80)
                           .Filterable(false);
                        columns.Bound(x => x.CustomerName).Title("Khách Hàng")
                            .Filterable(false);
                        columns.Bound(x => x.CreateDate).Title("Ngày Tháng").Format("{0:dd/MM/yyyy}")
                            .Width(150)
                            .Filterable(false);
                        columns.Bound(x => x.MyOfficeName).Title("Chi Nhánh")
                            .Width(200)
                            .Filterable(false);
                        columns.Bound(x => x.PaidDisplay).Title("Số Tiền Thu")
                            .Width(100)
                            .Filterable(false)
                            .FooterTemplate(@<text> <b>Tổng cộng: 0 </b></text>); ;
                        columns.Bound(p => p.TranferDisplay)
                            .ClientTemplate("<img src=\"" + Url.Action("Index", "Home", new { area = "" }) + "<#= TranferDisplay #>" + "\" />")
                            .HtmlAttributes(new { style = "text-align:center" })
                            .Title("Chuyển Khoản")
                            .Width(100)
                            .Filterable(false);
                        columns.Bound(p => p.InShippingPlaceDisplay)
                            .ClientTemplate("<img src=\"" + Url.Action("Index", "Home", new { area = "" }) + "<#= InShippingPlaceDisplay #>" + "\" />")
                            .HtmlAttributes(new { style = "text-align:center" })
                            .Title("Thu hộ")
                            .Width(70)
                            .Filterable(false);
                        columns.Bound(x => x.ApproveFromManagerName).Title("Xác Nhận Bởi")
                            .Width(200)
                            .Filterable(false);
                    })
                    .ClientEvents(events => events.OnDataBinding("onDataBinding").OnComplete("Grid_onComplete"))
                    .EnableCustomBinding(true)
                    .Sortable(p => p.OrderBy(o =>
                        {
                            o.Add(t => t.PaymentPeriodId).Descending();
                        })))
<script type="text/javascript">
    $(document).ready(function () {
        $("#ListOffices").multiselect({
            header: true,
            selectedText: '#/# đã chọn',
            noneSelectedText: '- Chọn -',
            selectedList: 0,
            checkAllText: 'Chọn hết',
            uncheckAllText: 'Bỏ chọn'
        });
        $("#ListOffices").multiselect("uncheckAll");
        $("#ListCustomers").multiselect({
            header: true,
            selectedText: '#/# đã chọn',
            noneSelectedText: '- Chọn -',
            selectedList: 0,
            checkAllText: 'Chọn hết',
            uncheckAllText: 'Bỏ chọn'
        });
        $("#ListCustomers").multiselect("uncheckAll");
        jQuery.validator.methods["date"] = function (value, element) { return true; };
    });
    function Grid_onComplete(e) {
        $.ajax({
            url: '@Url.Action("GetTotalCustomerPaid", "PaymentPeriod")',
            type: "POST",
            dataType: "json",
            success: function (data) {
                var td = $("#PaymentPeriod tfoot > .t-footer-template > td:nth-child(4)");
                td.html('<b>Tổng cộng: ' + data + '</b>');
            }
        });
    }
    function Preview() {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var listOffices = $("#ListOffices").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        var listCustomers = $("#ListCustomers").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        jQuery.ajaxSettings.traditional = true;
        $("#PaymentPeriod").data('tGrid')
                         .rebind({
                             FromDate: fromDate,
                             ToDate: toDate,
                             ListOffices: listOffices,
                             ListCustomers: listCustomers,
                             Tranfer: $("#Tranfer").is(':checked'),
                             InShippingPlace: $("#InShippingPlace").is(':checked'),
                         });

    }
    function onDataBinding(e) {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var listOffices = $("#ListOffices").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        var listCustomers = $("#ListCustomers").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        var searchModel = {
            FromDate: fromDate,
            ToDate: toDate,
            ListOffices: listOffices,
            ListCustomers: listCustomers,
            Tranfer: $("#Tranfer").is(':checked'),
            InShippingPlace: $("#InShippingPlace").is(':checked'),
        };
        e.data = searchModel;
    }
</script>