@model WeddingInvitation.Areas.Administrator.Models.OrderModel
@{
    ViewBag.Title = "Quản lý công nợ phải trả cho trung thành";
}
<script type="text/javascript">
    $(document).ready(function () {
        new SearchHelper($("#txtSearch"), $("#btnSearch"), $("#OrderDeliveryPackage"));
    });
</script>
<div class="section-header">
    <div class="title">
        <img src="@Url.Content("~/Areas/Administrator/Content/Images/ico-catalog.png")" alt="" />
        Quản lý công nợ phải trả cho trung thành
    </div>
    <div class="options">
        <a onclick="Preview();" class="t-button">Xem</a>
    </div>
</div>
<table width="100%">
    <tr>
        <td>
            @Html.Label("Từ ngày")
        </td>
        <td>
            @Html.Label("Đến ngày")
        </td>
        <td>
            @Html.Label("Chi nhánh")
        </td>
    </tr>
    <tr>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("FromDate")
                    .HtmlAttributes(new { id = "FromDate_wrapper" })
                    .ShowButton(true)
                    .Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1)))
        </td>
        <td>
            @(Html.Telerik().DatePicker()
                    .Name("ToDate")
                    .HtmlAttributes(new { id = "ToDate_wrapper" })
                    .ShowButton(true)
                    .Value(DateTime.Now)
            )
        </td>
        <td>
            @Html.DropDownList("ListOffices", new SelectList(Model.MyOffices, "MyOfficeId", "OfficeName"))
        </td>
    </tr>
</table>
<br />
@Helpers.SearchPanel(text: "Nhập vào từ khóa tìm kiếm...", btnSearch: "btnSearch", txtSearch: "txtSearch", showFromSearch: false)
@Html.Osd().HiddenPopupWindow("Cảnh Báo", Helpers.DeleteConfirmMessageBox("Bạn có thực sự muốn xóa không", @Url.Action("delete", "OrderDeliveryPackage", new { area = "administrator" })).ToHtmlString())
@(Html.Osd().Grid(new List<WeddingInvitation.Areas.Administrator.Models.OrderDeliveryPackageModel>(), name: "OrderDeliveryPackage", controllerName: "OrderDeliveryPackage")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.OrderDeliveryPackageId).Title("ID").ClientTemplate("<label><#= 10000 + OrderDeliveryPackageId #></label>")
                           .Width(150)
                           .Filterable(false);
                        columns.Bound(x => x.CreateDate).Title("Ngày Nhập").Format("{0:dd/MM/yyyy}")
                            .Width(250)
                            .Filterable(false);
                        columns.Bound(x => x.MyOfficeName).Title("Chi Nhánh")
                            .Filterable(false);
                        columns.Bound(x => x.ShippingFeeDisplay).Title("Cước Phí")
                            .Width(250)
                            .Filterable(false)
                            .FooterTemplate(@<text> <b>Tổng cộng: 0 </b></text>); 
                    })
                        .ClientEvents(events => events.OnDataBinding("onDataBinding").OnComplete("Grid_onComplete"))
                        .EnableCustomBinding(true)
                        .Sortable(p => p.OrderBy(o =>
                        {
                            o.Add(t => t.OrderDeliveryPackageId);
                        })))
<script type="text/javascript">
    $(document).ready(function () {
        $("#ListOffices").multiselect({
            header: true,
            selectedText: '#/# đã chọn',
            noneSelectedText: '- Chọn -',
            selectedList: 0,
            checkAllText: 'Chọn hết',
            uncheckAllText: 'Bỏ chọn'
        });
        $("#ListOffices").multiselect("uncheckAll");
        jQuery.validator.methods["date"] = function (value, element) { return true; };
    });
    function Grid_onComplete(e) {
        $.ajax({
            url: '@Url.Action("GetTotalShippingFee", "OrderDeliveryPackage")',
            type: "POST",
            dataType: "json",
            success: function (data) {
                var td = $("#OrderDeliveryPackage tfoot > .t-footer-template > td:nth-child(4)");
                td.html('<b>Tổng cộng: ' + data + '</b>');
            }
        });
    }
    function Preview() {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var listOffices = $("#ListOffices").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        jQuery.ajaxSettings.traditional = true;
        $("#OrderDeliveryPackage").data('tGrid')
                         .rebind({
                             FromDate: fromDate,
                             ToDate: toDate,
                             ListOffices: listOffices
                         });

    }
    function onDataBinding(e) {
        var fromDateTime = $('#FromDate').data('tDatePicker');
        var fromDate = $.telerik.formatString('{0:dd/MM/yyyy}', fromDateTime.value());
        var toDateTime = $('#ToDate').data('tDatePicker');
        var toDate = $.telerik.formatString('{0:dd/MM/yyyy}', toDateTime.value());
        var listOffices = $("#ListOffices").multiselect("getChecked").map(function () {
            return this.value;
        }).get();
        var searchModel = {
            FromDate: fromDate,
            ToDate: toDate,
            ListOffices: listOffices,
        };
        e.data = searchModel;
    }
</script>