@model WeddingInvitation.Areas.Administrator.Models.OrderDetailModel
@{
    var photoNotExistFileName = string.IsNullOrEmpty(Model.FilePath) ? Url.Content("~/Content/images/document.png") : Url.Content("~/Content/images/unavailable.png");
    var photoNotExistFileNameBia = string.IsNullOrEmpty(Model.FilePathBia) ? Url.Content("~/Content/images/document.png") : Url.Content("~/Content/images/unavailable.png");
    var photoNotExistFileNameRuot = string.IsNullOrEmpty(Model.FilePathRuot) ? Url.Content("~/Content/images/document.png") : Url.Content("~/Content/images/unavailable.png");
    var photoExistedFileName = Url.Content("~/Content/images/unavailable.png");
}
@{
    ViewBag.Title = "Thêm sản phẩm vào đơn hàng";
    Layout = null;
}
@using (Html.BeginForm("SaveOrderDetail", "Home", FormMethod.Post, new { id = "CreateOrderDetail" }))
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Areas/Administrator/Content/images/ico-catalog.png")" alt="" />
            Thêm sản phẩm vào đơn hàng
        </div>
        <div class="options">
            <button type="submit" name="save" value="Save" tabindex="6" class="t-button">Lưu sản phẩm</button>
            <a href="@Url.Action("CreateOrder", "Home", new { d = true, blank = false })" tabindex="8" class="t-button">Tạo lại</a>
            @*<a href="@Url.Action("CreateOrder", "Home")" tabindex="8" class="t-button">Quay về</a>*@
        </div>
    </div>
    @Html.HiddenFor(model => model.FilePathBia, new { id = "hfMainPromoImagePath" })
    @Html.HiddenFor(model => model.FilePathRuot, new { id = "hfMainPromoImagePathRuot" })
    @Html.HiddenFor(model => model.OrderId)
    <table width="99%">
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Sản phẩm")
                <span class="field_required">*</span>
            </td>
            <td class="adminData" colspan="3">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.Categories, "CategoryId", "CategoryName"), "-Chọn-")
                @Html.ValidationMessageFor(model => model.CategoryId, "Sản phẩm là bắt buộc.")
            </td>
        </tr>
        <tr>
            <td class="adminTitle"></td>
            <td align="left" id="listProduct" colspan="3"></td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Số lượng")
            </td>
            <td style="padding-bottom:10px" colspan="3">
                @(Html.Telerik().IntegerTextBoxFor(model => model.Amount).MinValue(0).MaxValue(int.MaxValue).NumberGroupSeparator(".").ClientEvents(p => p.OnChange("Amount_OnChange")))
                @Html.ValidationMessageFor(model => model.Amount)
                <label id="lblAmountWarning" style="text-align: right; padding-right: 80px; color: red;"></label>
            </td>
        </tr>
        <tr id="trPrintWithoutImage">
            <td class="adminTitle">
                @Html.Label("In không hình")
            </td>
            <td align="left" colspan="2">
                @Html.CheckBoxFor(model => model.PrintWithoutImage)
            </td>
        </tr>
        <tr id="trPrintIncludeImage">
            <td class="adminTitle">
                @Html.Label("In có hình cô dâu, chú rể")
            </td>
            <td align="left" colspan="3">
                @Html.CheckBoxFor(model => model.PrintIncludeImage)
            </td>
        </tr>
        <tr id="trImagePath">
            <td width="100" class="adminTitle">
                @Html.Label("File 1")
            </td>
            <td class="adminData">
                <img src="@photoNotExistFileNameBia" width="128" height="128" id="imgUserImagePath" />
            </td>
            <td width="100" class="adminTitle">
                @Html.Label("File 2")
            </td>
            <td class="adminData">
                <img src="@photoNotExistFileNameRuot" width="128" height="128" id="imgUserImagePathRuot" />
            </td>
        </tr>
        <tr id="trUploadButton">
            <td width="100" class="adminTitle"></td>
            <td class="adminData" colspan="2">
                <div class="uploadbtn align-left" style="background: none;padding-left: 24px;">
                    <input id="fileuploaderUserImage" type="file" />
                </div>
            </td>
            <td class="adminData">
                <div class="uploadbtn align-left" style="background: none;padding-left: 24px;">
                    <input id="fileuploaderUserImageRuot" type="file" />
                </div>
            </td>
        </tr>
        <tr>
            <td width="100" class="adminTitle">
                @Html.Label("Ghi chú")
            </td>
            <td class="adminData" colspan="3">
                @Html.TextAreaFor(model => model.Note, new { @rows = "3" })
                @Html.ValidationMessageFor(model => model.Note)
            </td>
        </tr>
    </table>
}
<script src="@Url.Content("~/Scripts/swfobject.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.uploadify.v2.1.4.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(window).load(
    function () {
        $("#fileuploaderUserImage").uploadify({
            'sizeLimit': 10240000,
            'uploader': '@Url.Content("~/Scripts/uploadify.swf")',
            'cancelImg': '@Url.Content("~/Content/images/cancel.png")',
            'buttonImg': '@Url.Content("~/Content/images/update_btn.png")',
            'buttonText': 'Upload A File',
            'height': '30',
            'width': '92',
            'script': '@Url.Action("OrderDetailFile", "Upload", new { area = "administrator" })',
            'folder': '@Url.Content("~/Uploads")',
            'fileDesc': 'Chọn Files',
            'multi': false,
            'auto': true,
            'onComplete': CompleteUpload,
            'onError': onErrorUpload
        });
        $("#fileuploaderUserImageRuot").uploadify({
            'sizeLimit': 10240000,
            'uploader': '@Url.Content("~/Scripts/uploadify.swf")',
            'cancelImg': '@Url.Content("~/Content/images/cancel.png")',
            'buttonImg': '@Url.Content("~/Content/images/update_btn.png")',
            'buttonText': 'Upload A File',
            'height': '30',
            'width': '92',
            'script': '@Url.Action("OrderDetailFile", "Upload", new { area = "administrator" })',
            'folder': '@Url.Content("~/Uploads")',
            'fileDesc': 'Chọn Files',
            'multi': false,
            'auto': true,
            'onComplete': CompleteUploadRuot,
            'onError': onErrorUpload
        });
        $("#fileuploaderQueue").hide();
        $("#PrintWithoutImage").click(function () {
            var isChecked = $('#PrintWithoutImage').is(':checked');
            if (isChecked == true) {
                $("#PrintIncludeImage").prop("checked", false);
            }
        });
        $("#PrintIncludeImage").click(function () {
            var isChecked = $('#PrintIncludeImage').is(':checked');
            if (isChecked == true) {
                $("#PrintWithoutImage").prop("checked", false);
            }
        });
        GetProducts();
        $("#CategoryId").change(function () {
            GetProducts();
        });
        $("#CreateOrderDetail").submit(function (event) {
            if ($('#canSubmit').val()=="true") {
                return;
            }
            $('#canSubmit').val("true");
            event.preventDefault();
            $('#PopupSaveOrderDetail').data('tWindow').center().open();
        });
        function GetProducts() {
            var categoryId = $('#CategoryId').val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetProducts", "Home")" + "?categoryId=" + categoryId,
                success: function (data) {
                    var html = "";
                    $.each(data, function (idx, obj) {
                        html += "<div class=\"checkboxlistAddProduct\"><input onclick=\"CheckboxlistAddProductChange(this)\" type=\"radio\" name=\"ProductIds\" value=" + obj.Id + " printable=" + obj.Printable + " roughdraft=" + obj.RoughDraft + "  " + obj.Checked + " ><span>" + obj.Name + "</span></div>"
                    });
                    //$('#listProduct').hide();
                    $('#listProduct').html(html);
                    $('#listProduct').show(400);
                },
                error: function () {
                    console.log('An error occurred');
                }
            });
        };
    });
    function CompleteUpload(event, queueID, fileObj, response, data) {
        document.getElementById("imgUserImagePath").src = "@photoExistedFileName";
        document.getElementById("hfMainPromoImagePath").value = response;
        return;
        //alert(fileObj.filePath + ' files uploaded successfully!');
    };
    function CompleteUploadRuot(event, queueID, fileObj, response, data) {
        document.getElementById("imgUserImagePathRuot").src = "@photoExistedFileName";
        document.getElementById("hfMainPromoImagePathRuot").value = response;
        return;
        //alert(fileObj.filePath + ' files uploaded successfully!');
    };
    function onErrorUpload(a, b, c, d) {
        if (d.status == 404)
            alert("Could not find upload script. Use a path relative to: " + "<?= getcwd() ?>");
        else if (d.type === "HTTP") {
            alert("error " + d.type + ": " + d.info);
        }
        else if (d.type === "File Size") {
            alert(d.type + " Limit: " + d.info / (10240000) + "MB");
        } else
            alert("error " + d.type + ": " + d.text);
    };
    function Amount_OnChange(e) {
        var categoryId = $('#CategoryId').val();
        $.ajax({
            url: '@Url.Action("CheckProductAmount", "Home")',
            type: "POST",
            dataType: "json",
            // query will be the param used by your action method
            data: { amount: e.newValue, categoryId: categoryId },
            success: function (data) {
                if (!data) {
                    $("#lblAmountWarning").text("Hiện tại mẫu này tạm thời hết hàng");
                }
            }
        });
    }
    function CheckboxlistAddProductChange(e) {
        if ($(e).attr("Printable") == "true") {
            $('#trPrintWithoutImage').show();
            $('#trPrintIncludeImage').show();
            $('#trImagePath').show();
            $('#trUploadButton').show();
            $('#msgConfirm').html("Quí khách vui lòng kiểm tra kỹ nội dung trước khi gửi. Mọi sai xót sau khi in chúng tôi không chịu trách nhiệm.");
        }
        else if ($(e).attr("roughdraft") == "true") {
            $('#trPrintWithoutImage').hide();
            $('#trPrintIncludeImage').hide();
            $('#trImagePath').hide();
            $('#trUploadButton').hide();
            $('#msgConfirm').html("Quí khách chỉ lấy phôi.");
        }
        else {
            $('#trPrintWithoutImage').hide();
            $('#trPrintIncludeImage').hide();
            $('#trImagePath').hide();
            $('#trUploadButton').hide();
            if ($(e).val() > 0) {
                $('#msgConfirm').html("Quí khách chỉ lấy bìa.");
            }

        }
    };
</script>
@{ Html.Telerik().Window()
        .Name("PopupSaveOrderDetail")
        .Title("Thông báo")
        .Draggable(true)
        .Modal(true)
        .Visible(false)
        .Width(303)
        .Height(127)
        .Effects(fx => fx
                    .Zoom()
                    .Opacity()
                    .OpenDuration(300)
                    .CloseDuration(300)
        )
        .Content(@<text>
    <script type="text/javascript">
        function onMessageBoxPopupSaveOrderDetailClose() {
            $('#PopupSaveOrderDetail').data('tWindow').center().close();
        }
        function PopupSaveOrderDetailSubmit()
        {
            $("#CreateOrderDetail").submit();
        }
    </script>
    <input type="hidden" id="canSubmit" value="false" />
    <div style="text-align:center"><p id="msgConfirm">Quí khách vui lòng kiểm tra kỹ nội dung trước khi gửi. Mọi sai xót sau khi in chúng tôi không chịu trách nhiệm.</p></div>
        <table>
            <tr> 
                <td>
                    <div class="form-actions"  style="margin-left:77px">
                        <input type="button" style="height:25px;width:50px" class="t-button t-state-default" value="Yes" onclick="PopupSaveOrderDetailSubmit();"/>
                    </div>
                </td> 
                <td>
                    <div class="form-actions"  style="margin-left:0px">
                        <input type="button" style="height:25px;width:50px" onclick="onMessageBoxPopupSaveOrderDetailClose();"
                        class="t-button t-state-default" value="No"/>
                    </div>
                </td>
            </tr> 
        </table>
    </text>)
        .Render();
}